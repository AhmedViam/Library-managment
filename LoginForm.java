package library;

import com.itextpdf.text.pdf.StringUtils;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import static library.Edit.DB_URL;
import static library.EditBook.DB_URL;

import org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Silfvro
 */



public class LoginForm extends javax.swing.JFrame {

 String AccountName;
 String AccountPassword;
 String AccountLevel;
 String AccountFlag;
 static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
 static final String DB_URL = "jdbc:mysql://127.0.0.1:3306/Library";
 static final String USER = "root";
 static final String PASS = "";
 public static    String timeStamp1 = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
 /**
  * Creates new form LoginForm
  */
 public LoginForm() {
  initComponents();
  setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);


 }



 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        ufield = new javax.swing.JTextField();
        pfield = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        book_nameq = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        search1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        guest_name = new javax.swing.JTextField();
        search2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        book_isbn = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knowledgica Library");
        setMaximizedBounds(new java.awt.Rectangle(636, 409, 409, 409));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(42, 50, 50));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), new java.awt.Color(51, 51, 51)));
        jPanel1.setToolTipText("");
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setMaximumSize(new java.awt.Dimension(636, 409));
        jPanel1.setMinimumSize(new java.awt.Dimension(636, 409));
        jPanel1.setName("Knowledgica"); // NOI18N
        jPanel1.setLayout(null);

        ufield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ufieldActionPerformed(evt);
            }
        });
        jPanel1.add(ufield);
        ufield.setBounds(110, 190, 89, 20);
        jPanel1.add(pfield);
        pfield.setBounds(110, 270, 89, 20);

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setForeground(new java.awt.Color(102, 102, 102));
        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(90, 360, 120, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Silfvro\\Documents\\NetBeansProjects\\Library\\username.png")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(31, 153, 54, 72);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Silfvro\\Documents\\NetBeansProjects\\Library\\password.png")); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(31, 249, 54, 72);

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Knowledge for all walks of life");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 70, 180, 15);

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Silfvro\\Documents\\NetBeansProjects\\Library\\logo.png")); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(310, 0, 54, 72);

        jLabel3.setBackground(new java.awt.Color(0, 51, 51));
        jLabel3.setFont(new java.awt.Font("Browallia New", 2, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("   Knowledgica Library");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(3, 3, 630, 89);

        jRadioButton1.setBackground(new java.awt.Color(42, 50, 50));
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(204, 204, 204));
        jRadioButton1.setText("Remember me");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton1);
        jRadioButton1.setBounds(90, 320, 130, 23);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jSeparator1.setMinimumSize(new java.awt.Dimension(2, 110));
        jSeparator1.setPreferredSize(new java.awt.Dimension(2, 10));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(320, 130, 2, 310);

        book_nameq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_nameqActionPerformed(evt);
            }
        });
        jPanel1.add(book_nameq);
        book_nameq.setBounds(440, 240, 89, 20);

        jButton3.setBackground(new java.awt.Color(153, 153, 153));
        jButton3.setForeground(new java.awt.Color(102, 102, 102));
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(550, 340, 80, 20);

        search1.setFont(new java.awt.Font("Yu Mincho", 1, 24)); // NOI18N
        search1.setForeground(java.awt.SystemColor.controlDkShadow);
        search1.setText("LIBRARY LOGIN");
        jPanel1.add(search1);
        search1.setBounds(30, 80, 250, 80);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledForeground"));
        jLabel5.setText("or");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(460, 300, 80, 17);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledForeground"));
        jLabel7.setText("Guest Name");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(340, 180, 84, 17);

        guest_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guest_nameActionPerformed(evt);
            }
        });
        jPanel1.add(guest_name);
        guest_name.setBounds(440, 180, 89, 20);

        search2.setFont(new java.awt.Font("Yu Mincho", 1, 24)); // NOI18N
        search2.setForeground(java.awt.SystemColor.controlDkShadow);
        search2.setText("Book Search");
        jPanel1.add(search2);
        search2.setBounds(400, 80, 180, 80);

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Silfvro\\Documents\\NetBeansProjects\\Library\\logo.png")); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(310, 0, 54, 72);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledForeground"));
        jLabel9.setText("Book Name");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(340, 240, 80, 17);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.disabledForeground"));
        jLabel10.setText("ISBN");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(340, 340, 37, 17);

        book_isbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_isbnActionPerformed(evt);
            }
        });
        jPanel1.add(book_isbn);
        book_isbn.setBounds(440, 340, 89, 20);

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setForeground(new java.awt.Color(102, 102, 102));
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(540, 180, 80, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

 private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
   // TODO add your handling code here:
  }//GEN-LAST:event_jRadioButton1ActionPerformed

 private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

     CryptWithMD5 d = new CryptWithMD5();
   if (ufield.getText().equals("") || pfield.getText().equals("")) {
    Constants c = new Constants();
    JOptionPane.showMessageDialog(null, c.getFieldError());
    return;
   }

   
   
   
   
    Database db = new Database();
   db.databaseConnection();

   Connection conn = db.databaseConnection();
   Statement stmt = null;

   
   
   
   
   
   
   
   
   
   
   
   
   
   
try {


    stmt = conn.createStatement();
    String sql;
    
    sql = ("INSERT INTO `login`(AccountName,login_time) VALUE ('" + ufield.getText() +"','"+ timeStamp1 + "')");
    db.setQuery(sql);
    db.getResultSetUpdate(stmt);

    
   
     
   } catch (SQLException de) {
   }

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

   
   String suhold = ufield.getText();
   String sphold = pfield.getText();
   setAccount(suhold);



   try {
    String uuhold;
    String pphold;

    uuhold = ufield.getText();
    pphold = pfield.getText();
    String crypted_password = d.cryptWithMD5(pphold);
    stmt = conn.createStatement();
    String sql;
    sql = "SELECT AccountName, AccountPassword,AccountLevel,AccountFlag FROM user WHERE AccountName = '" + uuhold + "' AND AccountPassword = '" + crypted_password + "'";
    db.setQuery(sql);
    db.getResultSet(stmt);
    ResultSet rs = stmt.executeQuery(sql);
    db.setResult(rs);

    if (db.getResultSet(stmt).next()) {
     AccountName = db.getdata("AccountName");
     AccountPassword = db.getdata("AccountPassword");
     AccountLevel = db.getdata("AccountLevel");
     AccountFlag = db.getdata("AccountFlag");
     String uhold;
     String phold;

     String ad = "Admin";
     String lib = "Library";
     String f = "newlib";
     uhold = ufield.getText();
     phold = pfield.getText();
     setAccount(uhold);
     // System.out.println(getAccount());

     if (uhold.equals(AccountName) && crypted_password.equals(AccountPassword) && ad.equals(AccountLevel)) {
      conn = DriverManager.getConnection(DB_URL, USER, PASS);
      stmt = conn.createStatement();

      sql = ("update `user`set freq = freq+1 where AccountName ='" + AccountName + "'");
      stmt.executeUpdate(sql);
      stmt.close();
      conn.close();
      this.setVisible(false);
      new AdminForm().setVisible(true);
      return;
     } else if (uhold.equals(AccountName) && crypted_password.equals(AccountPassword) && lib.equals(AccountLevel) && f.equals(AccountFlag)) {

      conn = DriverManager.getConnection(DB_URL, USER, PASS);
      stmt = conn.createStatement();

      sql = ("update `user`set freq = freq+1 where AccountName ='" + AccountName + "'");
      stmt.executeUpdate(sql);
      stmt.close();
      conn.close();




      this.setVisible(false);
      String pass;
      pass = JOptionPane.showInputDialog("Newpassword");
      pass = d.cryptWithMD5(pass);
      conn = DriverManager.getConnection(DB_URL, USER, PASS);
      stmt = conn.createStatement();

      sql = ("update `user`set  AccountPassword = '" + pass + "',AccountFlag= '' where AccountName ='" + AccountName + "'");
      stmt.executeUpdate(sql);
      stmt.close();
      conn.close();

      new Librarian().setVisible(true);

      return;
     } else if (uhold.equals(AccountName) && crypted_password.equals(AccountPassword) && lib.equals(AccountLevel)) {
      conn = DriverManager.getConnection(DB_URL, USER, PASS);
      stmt = conn.createStatement();

      sql = ("update `user`set freq = freq+1 where AccountName ='" + AccountName + "'");
      stmt.executeUpdate(sql);
      stmt.close();
      conn.close();




      this.setVisible(false);
      new Librarian().setVisible(true);
      return;
     }
    }
    JOptionPane.showMessageDialog(null, "Wrong username or password.");
    stmt.close();
    conn.close();
   } catch (SQLException se) {} catch (Exception e) {} finally {
    try {
     if (stmt != null)
      stmt.close();
    } catch (SQLException se2) {}
    try {
     if (conn != null)
      conn.close();
    } catch (SQLException se) {}
   }
   
  }//GEN-LAST:event_jButton1ActionPerformed

 private void ufieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ufieldActionPerformed
   // TODO add your handling code here:
  }//GEN-LAST:event_ufieldActionPerformed

 private void book_nameqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_nameqActionPerformed
   // TODO add your handling code here:
  }//GEN-LAST:event_book_nameqActionPerformed

 private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   if (guest_name.getText().equals("") || book_isbn.getText().equals("")) {
    Constants c = new Constants();
    JOptionPane.showMessageDialog(null, c.getFieldError());
    return;
   }


   try {
    Database dbs = new Database();
    dbs.databaseConnection();

    Connection conns = dbs.databaseConnection();
    Statement stmts = null;
    String num;
    num = (String) guest_name.getText();
    System.out.println("dd");
    stmts = conns.createStatement();
    String sql;
    sql = ("INSERT INTO `guest`(Name,book,ISBN) VALUE ('" + guest_name.getText() + "','" +"none" + "','"+book_isbn.getText()+ "')");
    dbs.setQuery(sql);
    dbs.getResultSetUpdate(stmts);
    stmts.close();
    conns.close();
   } catch (SQLException se) {}


   Connection conn = null;
   Statement stmt = null;

   String bookname = book_isbn.getText();
   try {

    // System.out.println("Connecting to database...");
    conn = DriverManager.getConnection(DB_URL, USER, PASS);
    stmt = conn.createStatement();
    String sql;
    sql = "SELECT ISBN,BookName,Info,State,Shelf FROM books where ISBN like '" + book_isbn.getText() + "';";
    // Extract data from result set
    try (ResultSet rs = stmt.executeQuery(sql)) {
     //STEP 5: Extract data from result set

     String BookName;
     String BookInfo;
     String Status;
     String Shelf;
     String ISBN;
     while (rs.next()) {
      //Retrieve by column name
      BookName = rs.getString("BookName");
      BookInfo = rs.getString("Info");
      Status = rs.getString("State");
      Shelf = rs.getString("Shelf");
      ISBN = rs.getString("ISBN");
      //   System.out.println(username);
      //  System.out.println(AccountName);
      if (ISBN.equals(book_isbn.getText())) {
          String g = book_isbn.getText();
            d.setSearch(g);
            data1 h = new data1();
            h.setVisible(true);
        return;
      } 
        JOptionPane.showMessageDialog(null, "Book not found in database");
        return;
      
     }
     JOptionPane.showMessageDialog(null, "Book not found in database");
    }

    stmt.close();
    conn.close();
   } catch (SQLException se) {
    se.printStackTrace();
   } catch (Exception e) {
    e.printStackTrace();
   } finally {
    try {
     if (stmt != null)
      stmt.close();
    } catch (SQLException se2) {}
    try {
     if (conn != null)
      conn.close();
    } catch (SQLException se) {
     se.printStackTrace();
    }
   }






   // TODO add your handling code here:
  }//GEN-LAST:event_jButton3ActionPerformed

 public static boolean isNum(String strNum) {
    boolean ret = true;
    try {

        Double.parseDouble(strNum);

    }catch (NumberFormatException e) {
        ret = false;
    }
    return ret;
}
 
 
 
 
 
 
 
 
 private void guest_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guest_nameActionPerformed
   // TODO add your handling code here:
  }//GEN-LAST:event_guest_nameActionPerformed

 private void book_isbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_book_isbnActionPerformed
   // TODO add your handling code here:
  }//GEN-LAST:event_book_isbnActionPerformed

  public static Database d = new Database();  

 
 
 
 
 
 
 private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

     
     if (guest_name.getText().equals("") || book_nameq.getText().equals("")) {
    Constants c = new Constants();
    JOptionPane.showMessageDialog(null, c.getFieldError());
    return;
   }
   if(isNum(guest_name.getText()) == true){
       JOptionPane.showMessageDialog(null, "The guest name you have entered contains numbers, please re-try");
       return;
   }

 
     
   

   try {
    Database dbs = new Database();
    dbs.databaseConnection();

    Connection conns = dbs.databaseConnection();
    Statement stmts = null;
    String num;
    num = (String) guest_name.getText();
    stmts = conns.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
    String sql;
    sql = ("INSERT INTO `guest`(Name,book,ISBN) VALUE ('" + guest_name.getText() + "','" + book_nameq.getText() + "','"+"none"+ "')");
    dbs.setQuery(sql);
    dbs.getResultSetUpdate(stmts);
    stmts.close();
    conns.close();
   } catch (SQLException se) {}

   Connection conn = null;
   Statement stmt = null;
   
   String bookname = book_nameq.getText();
   try {

    // System.out.println("Connecting to database...");
    conn = DriverManager.getConnection(DB_URL, USER, PASS);
    stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
    String sql;
    sql = "SELECT BookName,State,Shelf FROM books where BookName like '"+bookname+"'";
    // Extract data from result set
    try (ResultSet rs = stmt.executeQuery(sql)) {
     //STEP 5: Extract data from result set
     
     String BookName;
     String BookInfo;
     String Status;
     String Shelf;
     String c;
     while (rs.next()) {
      //Retrieve by column name
      BookName = rs.getString("BookName");
      Status = rs.getString("State");
      Shelf = rs.getString("Shelf");
      
      //  System.out.println(AccountName);
      int rows = 0;
      rs.last();
      rows = rs.getRow();
      
           
     /*
     // for(int g= 1;g< rows;g+=1){
     rs.first();
      c= rs.getString(2);
      System.out.println(c);
      rs.next();
      c= rs.getString(2);
      System.out.println(c);
     // }*/
      
      if (BookName.equals(bookname)) {
          String g = book_nameq.getText();
            d.setSearch(g);
            data h = new data();
            h.setVisible(true);
        return;
      } 
        JOptionPane.showMessageDialog(null, "Book not found in database");
        return;
     }
     JOptionPane.showMessageDialog(null, "Book not found in database");
        return;
    }


   } catch (SQLException se) {} catch (Exception e) {} finally {
    try {
     if (stmt != null)
      stmt.close();
    } catch (SQLException se2) {}
    try {
     if (conn != null)
      conn.close();
    } catch (SQLException se) {}
   }



 






































  }//GEN-LAST:event_jButton4ActionPerformed
 public String getAccount() {
  return AccountName;
 }
 public void setAccount(String AccName) {
   AccountName = AccName;
  }
  /**
   * @param args the command line arguments
   */
 public static void main(String args[]) {
  /* Set the Nimbus look and feel */
  //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
  /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
   * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   */
  try {
   BeautyEyeLNFHelper.frameBorderStyle = BeautyEyeLNFHelper.FrameBorderStyle.generalNoTranslucencyShadow;
   org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
   UIManager.put("RootPane.setupButtonVisible", Boolean.FALSE);
  } catch (Exception ex) {
   ex.printStackTrace();
  }

  //</editor-fold>

  /* Create and display the form */

 }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField book_isbn;
    private javax.swing.JTextField book_nameq;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField guest_name;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField pfield;
    private javax.swing.JLabel search1;
    private javax.swing.JLabel search2;
    private javax.swing.JTextField ufield;
    // End of variables declaration//GEN-END:variables
}